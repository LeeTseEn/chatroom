---
- name: Ensure Java is installed (OpenJDK 11)
  yum:
    name: java-11-openjdk-devel
    state: present

- name: Get JAVA_HOME path
  command: readlink -f $(which java)
  register: java_path
  changed_when: false

- name: Set JAVA_HOME in bashrc
  lineinfile:
    path: /home/swadmin/.bashrc
    line: 'export JAVA_HOME={{ java_path.stdout | dirname | dirname }}'
    create: yes
  become: yes
  become_user: swadmin

- name: Set PATH with JAVA_HOME
  lineinfile:
    path: /home/swadmin/.bashrc
    line: 'export PATH=$JAVA_HOME/bin:$PATH'
    create: yes
  become: yes
  become_user: swadmin

- name: Download Kafka
  get_url:
    url: "{{ download_url }}"
    dest: "/tmp/{{ kafka_tgz }}"
    mode: '0644'

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: swadmin
    group: swadmin
    mode: '0755'
  loop:
    - "{{ install_dir }}"
    - "{{ log_dir }}"

- name: Extract Kafka
  unarchive:
    src: "/tmp/{{ kafka_tgz }}"
    dest: "{{ install_dir }}"
    remote_src: yes
    extra_opts: [--strip-components=1]
  become_user: swadmin

- name: Clean Kafka tgz
  file:
    path: "/tmp/{{ kafka_tgz }}"
    state: absent

- name: Add Kafka to PATH
  lineinfile:
    path: /home/swadmin/.bashrc
    line: 'export PATH=$PATH:{{ install_dir }}/bin'
    state: present
  become: no

- name: Write server.properties
  copy:
    dest: "{{ install_dir }}/config/server.properties"
    content: "{{ kafka_config }}"
    mode: '0644'
    owner: swadmin
    group: swadmin

- name: Generate Kafka cluster UUID
  command: uuidgen
  register: cluster_uuid
  changed_when: false

- name: Format Kafka storage
  command: >
    {{ install_dir }}/bin/kafka-storage.sh
    format -t {{ cluster_uuid.stdout }}
    -c {{ install_dir }}/config/server.properties
  become_user: swadmin

- name: Start Kafka
  shell: >
    nohup {{ install_dir }}/bin/kafka-server-start.sh
    {{ install_dir }}/config/server.properties > {{ kafka_log_file }} 2>&1 &
  async: 0
  poll: 0
  become_user: swadmin

- name: Wait for Kafka to start
  wait_for:
    timeout: 5

- name: Check if Kafka is listening on port 9092
  shell: netstat -ntlp | grep -q 9092
  register: kafka_status
  ignore_errors: yes

- name: Show Kafka status
  debug:
    msg: >
      {% if kafka_status.rc == 0 %}
      ✅ Kafka 已啟動在 port 9092
      {% else %}
      ❌ Kafka 未啟動，請查看 {{ kafka_log_file }}
      {% endif %}
